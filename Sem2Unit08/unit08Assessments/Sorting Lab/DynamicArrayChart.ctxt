#BlueJ class context
comment0.target=DynamicArrayChart
comment0.text=\n\ Provides\ a\ GUI\ frame\ that\ contains\ a\ dynamic\ chart\ representing\ an\ array\n\ being\ sorted.\n
comment1.params=sortName\ array\ includeBuffer\ pauseInMs
comment1.target=DynamicArrayChart(java.lang.String,\ int[],\ boolean,\ int)
comment1.text=\n\ Creates\ a\ DynamicArrayChart\ with\ custom\ parameters.\n\ @param\ sortName\ Name\ of\ the\ sorting\ algorithm\ being\ demonstrated.\n\ @param\ array\ An\ array\ with\ 1-20\ ints\ with\ values\ ranging\ from\ 1-50.\n\ @param\ includeBuffer\ <code>true</code>\ if\ the\ sorting\ algorithm\ being\n\ demonstrated\ involves\ storing\ a\ value\ while\ other\ values\ in\ the\ array\n\ are\ being\ moved.\n\ @param\ pauseInMs\ Number\ of\ milliseconds\ between\ each\ step\ of\ the\ \n\ demonstration.\ 250\ milliseconds\ are\ recommended.\ 10\ milliseconds\ are\ the\n\ recommended\ minimum;\ a\ value\ less\ than\ 10\ milliseconds\ would\ be\ too\ fast\n\ to\ observe.\ Enter\ a\ higher\ number\ to\ observe\ the\ demonstration\ slowly.\n\ @throws\ InvalidArgumentException\ Thrown\ if\ an\ argument\ is\ null.\n\ @throws\ InvalidArrayException\ Thrown\ if\ the\ array\ does\ not\ meet\ the\n\ above\ specifications.\n
comment10.params=indexFrom\ indexTo
comment10.target=void\ moveIndexElement(int,\ int)
comment10.text=\n\ Moves\ a\ value\ from\ one\ index\ to\ another.\ Sets\ the\ value\ at\ the\ vacated\n\ index\ to\ zero.\ Triggers\ a\ drawing\ of\ the\ new\ chart.\n
comment11.params=insertIndex\ value
comment11.target=void\ insert(int,\ int)
comment11.text=\n\ Inserts\ a\ value\ at\ an\ index.\ Triggers\ a\ drawing\ of\ the\ inserted\ value.\n\ @param\ insertIndex\ Location\ in\ array\ to\ insert\ the\ value.\n\ @param\ value\ Value\ to\ insert.\n
comment12.params=
comment12.target=void\ setDone()
comment12.text=\n\ Tells\ the\ chart\ that\ sorting\ is\ done.\ Triggers\ a\ drawing\ of\ the\ chart\n\ in\ the\ done\ color.\n
comment13.params=
comment13.target=void\ pause()
comment13.text=\n\ Pauses\ the\ demonstration\ for\ the\ amount\ of\ milliseconds\ specified\ by\ \n\ pauseInMs.\n
comment2.params=
comment2.target=void\ setupGui()
comment2.text=\n\ Sets\ up\ the\ JFrame,\ the\ sort\ label,\ and\ the\ array\ chart.\n
comment3.params=
comment3.target=int\ getArrayLength()
comment3.text=\n\ Returns\ the\ length\ of\ the\ array\ being\ sorted.\n\ @return\ The\ length\ of\ the\ array\ being\ sorted.\n
comment4.params=index
comment4.target=int\ getValueForSwap1(int)
comment4.text=\n\ To\ be\ called\ when\ performing\ a\ swap-based\ sort\ when\ comparing\ the\ first\n\ of\ two\ values.\n\ @param\ index\ Index\ of\ the\ first\ value\ being\ considered.\n\ @return\ Value\ of\ array\ element\ at\ specified\ index.\n
comment5.params=index
comment5.target=int\ getValueForSwap2(int)
comment5.text=\n\ To\ be\ called\ when\ performing\ a\ swap-based\ sort\ when\ comparing\ the\ second\n\ of\ two\ values.\ Triggers\ a\ painting\ of\ the\ two\ values\ being\ examined.\n\ The\ first\ value\ will\ be\ yellow.\ The\ second\ value\ will\ be\ orange.\n\ @param\ index\ Index\ of\ the\ first\ value\ being\ considered.\n\ @return\ Value\ of\ array\ element\ at\ specified\ index.\n
comment6.params=index
comment6.target=void\ markAsMin(int)
comment6.text=\n\ To\ be\ called\ when\ performing\ a\ swap-based\ sort\ when\ scanning\ values\ and\n\ keeping\ track\ of\ the\ minimum\ value\ encountered\ so\ far.\ The\ minimum\ value\n\ will\ show\ up\ as\ a\ pink\ column\ in\ the\ chart.\n\ @param\ index\ Index\ of\ element\ to\ be\ marked\ as\ the\ minimum\ value\ found\n\ so\ far.\n
comment7.params=indexA\ indexB
comment7.target=void\ swap(int,\ int)
comment7.text=\n\ Swaps\ two\ values\ during\ a\ swap-based\ sort.\ Triggers\ a\ painting\ of\ the\n\ two\ values\ in\ swapped\ order.\n\ @param\ indexA\ First\ value\ to\ be\ swapped.\n\ @param\ indexB\ Second\ value\ to\ be\ swapped.\n
comment8.params=index
comment8.target=int\ getValueForMove(int)
comment8.text=\n\ To\ be\ called\ when\ getting\ a\ value\ during\ a\ sort\ that\ involves\ shifting\n\ array\ values.\ Does\ not\ trigger\ special\ coloring\ of\ the\ columns.\n\ @param\ index\ Index\ of\ the\ array\ being\ examined.\n\ @return\ Value\ of\ array\ element\ at\ specified\ index.\n
comment9.params=index
comment9.target=int\ copyToBuffer(int)
comment9.text=\n\ To\ be\ called\ when\ considering\ a\ new\ value\ during\ a\ sort\ that\ involves\n\ shifting\ array\ values.\ This\ is\ the\ value\ being\ removed\ only\ to\ be\n\ reinserted\ into\ a\ new\ position\ in\ the\ array\ after\ other\ elements\ have\n\ been\ moved\ aside\ to\ make\ a\ space.\ Triggers\ a\ special\ drawing\ of\ the\n\ buffered\ value\ off\ to\ the\ left\ of\ the\ rest\ of\ the\ chart.\n\ @param\ index\n\ @return\n
numComments=14
